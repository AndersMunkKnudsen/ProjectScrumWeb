@model ScrumWeb.Models.Tasks

@{
    ViewBag.Title = "Create new task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<br />
@*<h2>Create</h2>*@


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Create Task</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.HiddenFor(model => model.TaskID, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaskStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TaskStatus, new SelectList(
           new List<Object> { new { value = "BACKLOGITEM", text = "BACKLOGITEM" }, new { value = "TODO", text = "TODO" }, new { value = "INPROGRESS", text = "IN PROGRESS" }, new { value = "DONE", text = "DONE" } }, "value", "text", 2), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TaskStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.TaskAssignedToUser, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaskAssignedToUser, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaskAssignedToUser, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <label class="control-label col-md-2">Assign User:</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TaskAssignedToUser, (IEnumerable<SelectListItem>)ViewBag.Users, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
